/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;
import UserObj.patientObj;
import java.util.ArrayList;
import java.util.Random;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.FileWriter;
import java.io.IOException;
import UserObj.user;
import DataHandling.dataReadIn;
import Main.Clinic;




/**
 *
 * @author Block
 */
public class secretaryLogedInScreen extends javax.swing.JFrame {

    /**
     * Creates new form secretaryLogedInScreen
     */
    
    
    public secretaryLogedInScreen() {
        initComponents();
    
        
    }
    
     public static class ticker {
        static int nextRequest = 0 ;
    }
      public static class tickerrewrite {
        static int nextRequest = 0 ;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userIdTxt = new javax.swing.JLabel();
        passwordTxt = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JLabel();
        lastNameTxt = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ApproveAccountPatient = new javax.swing.JButton();
        passwordIn = new javax.swing.JTextField();
        usernameIn1 = new javax.swing.JTextField();
        firstNameIn = new javax.swing.JTextField();
        addressLineIn = new javax.swing.JTextField();
        workNumberIn = new javax.swing.JTextField();
        lastNameIn = new javax.swing.JTextField();
        dataOfBirthIn = new javax.swing.JTextField();
        cityIn = new javax.swing.JTextField();
        mobileIn = new javax.swing.JTextField();
        ageIn = new javax.swing.JTextField();
        genderIn = new javax.swing.JTextField();
        backtologin = new javax.swing.JButton();
        nextpatient = new javax.swing.JButton();
        loadFirstPatient = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        patientNumberin = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("secretaryPage");

        userIdTxt.setText("username");

        passwordTxt.setText("password");

        firstNameTxt.setText("first name ");

        lastNameTxt.setText("last name ");

        jLabel2.setText("mobile phone number ");

        jLabel3.setText("work phone number ");

        jLabel4.setText("addressline ");

        jLabel5.setText("city");

        jLabel6.setText("date of birth ");

        jLabel7.setText("age");

        jLabel8.setText("gender");

        ApproveAccountPatient.setText("Approve Patient");
        ApproveAccountPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveAccountPatientActionPerformed(evt);
            }
        });

        backtologin.setText("backtologin");
        backtologin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtologinActionPerformed(evt);
            }
        });

        nextpatient.setText("nextpatient");
        nextpatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextpatientActionPerformed(evt);
            }
        });

        loadFirstPatient.setText("LoadFirstPatient");
        loadFirstPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFirstPatientActionPerformed(evt);
            }
        });

        jLabel9.setText("patientnumber");

        jButton1.setText("patient request account deletion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("delete patient account with username");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("view patient appointment requests");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                        .addComponent(userIdTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(passwordTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(firstNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lastNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(usernameIn1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(loadFirstPatient))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(dataOfBirthIn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addressLineIn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(workNumberIn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lastNameIn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton3))
                                        .addComponent(mobileIn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cityIn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(passwordIn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton1))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(firstNameIn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addComponent(jLabel9)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(genderIn, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(ageIn, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(patientNumberin)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(backtologin, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ApproveAccountPatient)
                        .addGap(18, 18, 18)
                        .addComponent(nextpatient, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(155, 253, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(userIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstNameIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastNameIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(mobileIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(workNumberIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(addressLineIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cityIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(dataOfBirthIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(ageIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(genderIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernameIn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loadFirstPatient))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(patientNumberin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(backtologin, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(ApproveAccountPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextpatient, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ApproveAccountPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveAccountPatientActionPerformed
        // reads the user wanting approval from array deletes user and moves there user data to approved accounts list 
        
        String username = usernameIn1.getText();
        String password = passwordIn.getText();
        String firstname = firstNameIn.getText();
        String lastname = lastNameIn.getText();
        String mobilePhoneNumber = mobileIn.getText();
        String workPhoneNumber = workNumberIn.getText();
        String addressline = addressLineIn.getText();
        String city = cityIn.getText();
        String dateOfBirth = dataOfBirthIn.getText();
        String age = ageIn.getText();
        String gender = genderIn.getText();
        String patientNumber = patientNumberin.getText();
       
        
         try{
            BufferedWriter out = new BufferedWriter(new FileWriter("./checks\\approvedPatients.txt", true));
            out.newLine();
            out.newLine();
            out.write(username);
            out.newLine();
            out.write(password);
            out.newLine();
            out.write(firstname);
            out.newLine();
            out.write(lastname);
            out.newLine();
            out.write(mobilePhoneNumber);
            out.newLine();
            out.write(workPhoneNumber);
            out.newLine();
            out.write(addressline);
            out.newLine();
            out.write(city);
            out.newLine();
            out.write(dateOfBirth);
            out.newLine();
            out.write(age);
            out.newLine();
            out.write(gender);
            out.newLine();
            out.write(patientNumber);   
            out.close();
        }
        catch(Exception e){
            e.printStackTrace();
        }
         
       Clinic.infoBox("account has been approved and request cleared ", "account created   ");
       ArrayList<user> patientReqeuest = new ArrayList<user>();
        dataReadIn data = new dataReadIn();
        try{
            data.readPatientReqest(patientReqeuest);
        }
        catch(Exception e){
            e.printStackTrace();
        }
        Object[] approvedPatient = patientReqeuest.toArray();
        int length = approvedPatient.length;
        try{
            BufferedWriter clear = new BufferedWriter(new FileWriter("./checks\\patientRequestsAccount.txt", false));
            clear.newLine();
        
        
        }
         catch(Exception e){
            e.printStackTrace();
        }     
        
        
        
        
        
        
        
        data.removePatientToArray(patientReqeuest.get(tickerrewrite.nextRequest),patientReqeuest);
        approvedPatient = patientReqeuest.toArray();
        int currentLength = approvedPatient.length;
        if (currentLength > 0){
            for (int length1 = 0; length1 < currentLength; length1 = length1 + 1){
            
                username = ((UserObj.patientObj)approvedPatient[length1]).getUserID();
                password = ((UserObj.patientObj)approvedPatient[length1]).getPassword();
                firstname = ((UserObj.patientObj)approvedPatient[length1]).getFirstname();
                lastname = ((UserObj.patientObj)approvedPatient[length1]).getLastname();
                mobilePhoneNumber = ((UserObj.patientObj)approvedPatient[length1]).getMobilePhoneNumber();
                workPhoneNumber = ((UserObj.patientObj)approvedPatient[length1]).getWorkPhoneNumber();
                addressline = ((UserObj.patientObj)approvedPatient[length1]).getAddressLine();
                city = ((UserObj.patientObj)approvedPatient[length1]).getCity();
                dateOfBirth = ((UserObj.patientObj)approvedPatient[length1]).getDateOfBirth();
                age = ((UserObj.patientObj)approvedPatient[length1]).getAge();
                gender = ((UserObj.patientObj)approvedPatient[length1]).getGender();
                patientNumber  = ((UserObj.patientObj)approvedPatient[length1]).getPatientNumber();
                try{
                    BufferedWriter out = new BufferedWriter(new FileWriter("./checks\\patientRequestsAccount.txt", true));
                    out.newLine();
                    out.write(username);
                    out.newLine();
                    out.write(password);
                    out.newLine();
                    out.write(firstname);
                    out.newLine();
                    out.write(lastname);
                    out.newLine();
                    out.write(mobilePhoneNumber);
                    out.newLine();
                    out.write(workPhoneNumber);
                    out.newLine();
                    out.write(addressline);
                    out.newLine();
                    out.write(city);
                    out.newLine();
                    out.write(dateOfBirth);
                    out.newLine();
                    out.write(age);
                    out.newLine();
                    out.write(gender);
                    out.newLine();
                    out.write(patientNumber);
                    out.newLine();
                    out.close();
      
            }
        catch(Exception e){
            e.printStackTrace();
        }     
               
            
            
            }
        
        
        
        
        
        
        
        }
        
        
        
        
        
        
        
       

    }//GEN-LAST:event_ApproveAccountPatientActionPerformed

    private void backtologinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtologinActionPerformed
        loginPage open = new loginPage();
        open.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backtologinActionPerformed

    private void nextpatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextpatientActionPerformed
        tickerrewrite.nextRequest = tickerrewrite.nextRequest + 1 ;
        ticker.nextRequest = ticker.nextRequest + 1;
       // this needs to be made global so it does not reset to 0 each time 
       ArrayList<user> patientRequest = new ArrayList<user>();
        
        dataReadIn data = new dataReadIn();
        try{
            data.readPatientReqest(patientRequest);
        }
        catch(Exception e){
            e.printStackTrace();
        }
        // runs data read in functrion for reading data from pateint account request 
        
        Object[] displayPatient = patientRequest.toArray();
        int length = displayPatient.length;
       
       
        usernameIn1.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getUserID());
        passwordIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getPassword());
        firstNameIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getFirstname());
        lastNameIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getLastname());
        mobileIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getMobilePhoneNumber());
        workNumberIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getWorkPhoneNumber());
        addressLineIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getAddressLine());
        cityIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getCity());
        dataOfBirthIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getDateOfBirth());
        ageIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getAge());
        genderIn.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getGender());
        patientNumberin.setText(((UserObj.patientObj)displayPatient[ticker.nextRequest]).getPatientNumber());
                                                  
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_nextpatientActionPerformed

    private void loadFirstPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFirstPatientActionPerformed

        ArrayList<user> patientRequest = new ArrayList<user>();
        
        dataReadIn data = new dataReadIn();
        try{
            data.readPatientReqest(patientRequest);
        }
        catch(Exception e){
            e.printStackTrace();
        }
        // runs data read in functrion for reading data from pateint account request 
        
        Object[] displayPatient = patientRequest.toArray();
        int length = displayPatient.length;
       
       
        usernameIn1.setText(((UserObj.patientObj)displayPatient[0]).getUserID());
        passwordIn.setText(((UserObj.patientObj)displayPatient[0]).getPassword());
        firstNameIn.setText(((UserObj.patientObj)displayPatient[0]).getFirstname());
        lastNameIn.setText(((UserObj.patientObj)displayPatient[0]).getLastname());
        mobileIn.setText(((UserObj.patientObj)displayPatient[0]).getMobilePhoneNumber());
        workNumberIn.setText(((UserObj.patientObj)displayPatient[0]).getWorkPhoneNumber());
        addressLineIn.setText(((UserObj.patientObj)displayPatient[0]).getAddressLine());
        cityIn.setText(((UserObj.patientObj)displayPatient[0]).getCity());
        dataOfBirthIn.setText(((UserObj.patientObj)displayPatient[0]).getDateOfBirth());
        ageIn.setText(((UserObj.patientObj)displayPatient[0]).getAge());
        genderIn.setText(((UserObj.patientObj)displayPatient[0]).getGender());
        patientNumberin.setText(((UserObj.patientObj)displayPatient[0]).getPatientNumber());
    }//GEN-LAST:event_loadFirstPatientActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        secretarydeletepatientaccount open = new secretarydeletepatientaccount();
        open.setVisible(true);
        this.dispose();
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        deletePatientAccount open = new deletePatientAccount();
        open.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        approvePatientAppointmentRequest open = new approvePatientAppointmentRequest();
        open.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ApproveAccountPatient;
    private javax.swing.JTextField addressLineIn;
    private javax.swing.JTextField ageIn;
    private javax.swing.JButton backtologin;
    private javax.swing.JTextField cityIn;
    private javax.swing.JTextField dataOfBirthIn;
    private javax.swing.JTextField firstNameIn;
    private javax.swing.JLabel firstNameTxt;
    private javax.swing.JTextField genderIn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lastNameIn;
    private javax.swing.JLabel lastNameTxt;
    private javax.swing.JButton loadFirstPatient;
    private javax.swing.JTextField mobileIn;
    private javax.swing.JButton nextpatient;
    private javax.swing.JTextField passwordIn;
    private javax.swing.JLabel passwordTxt;
    private javax.swing.JTextField patientNumberin;
    private javax.swing.JLabel userIdTxt;
    private javax.swing.JTextField usernameIn1;
    private javax.swing.JTextField workNumberIn;
    // End of variables declaration//GEN-END:variables
}
